name: Deploy to GKE

on:
  push:
    branches:
      - main
      - stage

env:
  PROJECT_ID: ${{ secrets.PROJECT_ID }}
  IMAGE_NAME: ${{ secrets.IMAGE_NAME }}
  GKE_CLUSTER: ${{ secrets.GKE_CLUSTER }}
  GKE_ZONE: ${{ secrets.GKE_ZONE }}
  SERVICE_ACCOUNT: "github-deployer@pagetest-446907.iam.gserviceaccount.com"
  WORKLOAD_IDENTITY_PROVIDER: "projects/748186395629/locations/global/workloadIdentityPools/github-pool/attribute.repository/dudox/k8s-gcp-arch"

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      contents: 'read'
      id-token: 'write'
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Authenticate with Google Cloud ${{env.WORKLOAD_IDENTITY_PROVIDER}} ${{ env.SERVICE_ACCOUNT }}
        uses: google-github-actions/auth@v2
        with:
          workload_identity_provider: ${{ env.WORKLOAD_IDENTITY_PROVIDER }}
          service_account: ${{ env.SERVICE_ACCOUNT }}

      - name: Set up Google Cloud SDK
        uses: google-github-actions/setup-gcloud@v2

      - name: Configure Docker for GCR
        run: gcloud auth configure-docker gcr.io

      - name: Determine Deployment Environment
        run: |
          if [[ "${{ github.ref }}" == "refs/heads/main" ]]; then
            echo "DEPLOY_ENV=production" >> $GITHUB_ENV
          else
            echo "DEPLOY_ENV=stage" >> $GITHUB_ENV
          fi

      - name: Build and Push Docker Image
        run: |
          docker build -t gcr.io/$PROJECT_ID/$IMAGE_NAME:${{ github.sha }} .
          docker push gcr.io/$PROJECT_ID/$IMAGE_NAME:${{ github.sha }}

  deploy:
    runs-on: ubuntu-latest
    needs: build-and-push
    steps:
      - name: Authenticate with Google Cloud
        uses: google-github-actions/auth@v2
        with:
          workload_identity_provider: ${{ env.WORKLOAD_IDENTITY_PROVIDER }}
          service_account: ${{ env.SERVICE_ACCOUNT }}

      - name: Get GKE Credentials
        run: gcloud container clusters get-credentials $GKE_CLUSTER --zone $GKE_ZONE --project $PROJECT_ID

      - name: Deploy to Kubernetes
        run: |
          kubectl set image deployment/app-pagetest app-pagetest=gcr.io/$PROJECT_ID/$IMAGE_NAME:${{ github.sha }} -n ${{ env.DEPLOY_ENV }}
          kubectl rollout status deployment/app-pagetest -n ${{ env.DEPLOY_ENV }}

      - name: Rollback on Failure
        if: failure()
        run: kubectl rollout undo deployment/app-pagetest -n ${{ env.DEPLOY_ENV }}

  release:
    runs-on: ubuntu-latest
    needs: deploy
    if: github.ref == 'refs/heads/main'
    steps:
      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: v${{ github.run_number }}
          name: "Release ${{ github.run_number }}"
          body: "Automated deployment of commit ${{ github.sha }}"
